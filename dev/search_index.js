var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = GeoEnergyIO","category":"page"},{"location":"#GeoEnergyIO","page":"Home","title":"GeoEnergyIO","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GeoEnergyIO.","category":"page"},{"location":"","page":"Home","title":"Home","text":"parse_data_file\nparse_grdecl_file\nmesh_from_grid_section\nget_data_file_cell_region","category":"page"},{"location":"#GeoEnergyIO.InputParser.parse_data_file","page":"Home","title":"GeoEnergyIO.InputParser.parse_data_file","text":"parse_data_file(filename; unit = :si)\ndata = parse_data_file(\"MY_MODEL.DATA\")\n\nParse a .DATA file given by the filename (industry standard input file) into a Dict. Units will be converted to strict SI unless you pass something else like units = :field. Setting units = nothing will skip unit conversion. Note that JutulDarcy assumes that the unit system is internally consistent. It is highly recommended to parse to the SI units if you want to perform simulations.\n\nThe best publicly available documentation on this format is available from the Open Porous Media (OPM) project's webpages: OPM Flow manual .\n\nKeyword arguments\n\nwarn_parsing=true: Produce a warning when keywords are not supported (or partially supported) by the parser.\nwarn_feature=true`: Produce a warning when keywords are supported, but have limited or missing support in the numerical solvers.\nunits=:si: Symbol that indicates the unit system to be used in the output. Setting this to nothing will return values without conversion, i.e. exactly what is in the input files. :si will use strict SI. Other alternatives are :field and :metric. :lab is currently unsupported.\n\nNote\n\nThis function is experimental and only covers a small portion of the keywords that exist for various simulators. You will get warnings that indicate the level of support for keywords in both the parser and the numerical solvers when known keywords with limited support. Pull requests for new keywords are welcome!\n\n\n\n\n\n","category":"function"},{"location":"#GeoEnergyIO.InputParser.parse_grdecl_file","page":"Home","title":"GeoEnergyIO.InputParser.parse_grdecl_file","text":"parse_grdecl_file(\"mygrid.grdecl\"; actnum_path = missing, kwarg...)\n\nParse a GRDECL file separately from the full input file. Note that the GRID section does not contain units - passing the input_units keyword is therefore highly recommended.\n\nKeyword arguments\n\nunits=:si: Units to use for return values. Requires input_units to be set.\ninput_units=nothing: The units the file is given in.\nverbose=false: Toggle verbosity.\n\n\n\n\n\n","category":"function"},{"location":"#GeoEnergyIO.CornerPointGrid.mesh_from_grid_section","page":"Home","title":"GeoEnergyIO.CornerPointGrid.mesh_from_grid_section","text":"mesh_from_grid_section(f, actnum = missing)\n\nTBW\n\n\n\n\n\n","category":"function"},{"location":"#GeoEnergyIO.InputParser.get_data_file_cell_region","page":"Home","title":"GeoEnergyIO.InputParser.get_data_file_cell_region","text":"get_data_file_cell_region(outer_data, t::Symbol; active = nothing)\n\nGet the region indicator of some type for each cell of the domain.\n\nt should be one of :satnum, :pvtnum or :eqlnum.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
